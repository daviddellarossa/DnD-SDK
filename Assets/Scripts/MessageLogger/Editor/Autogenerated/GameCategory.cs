//------------------------------------------------------------------------------
// <auto-generated>
// Code auto-generated by CategoryGenerator version 0.0.0.
// Re-run the generator every time the Logger needs to be updated.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace MessageLogger.Editor
{
    internal class GameCategory : MessageCategory
    {
        protected override void Subscribe()
        {
            var instance = DeeDeeR.MessageBroker.MessageBroker.Instance.Game;
            instance.OnGameOver += Handle_OnGameOver;
            instance.OnGamePaused += Handle_OnGamePaused;
            instance.OnGameResumed += Handle_OnGameResumed;
            instance.OnGameStarted += Handle_OnGameStarted;
        }

        protected override void Unsubscribe()
        {
            var instance = DeeDeeR.MessageBroker.MessageBroker.Instance.Game;
            instance.OnGameOver -= Handle_OnGameOver;
            instance.OnGamePaused -= Handle_OnGamePaused;
            instance.OnGameResumed -= Handle_OnGameResumed;
            instance.OnGameStarted -= Handle_OnGameStarted;
        }

        private void Handle_OnGameOver(object sender, MessageBroker.MessageBrokerEventArgs e)
        {
            Logger.LogEvent(e);
        }

        private void Handle_OnGamePaused(object sender, MessageBroker.MessageBrokerEventArgs e)
        {
            Logger.LogEvent(e);
        }

        private void Handle_OnGameResumed(object sender, MessageBroker.MessageBrokerEventArgs e)
        {
            Logger.LogEvent(e);
        }

        private void Handle_OnGameStarted(object sender, MessageBroker.MessageBrokerEventArgs e)
        {
            Logger.LogEvent(e);
        }
    }
}