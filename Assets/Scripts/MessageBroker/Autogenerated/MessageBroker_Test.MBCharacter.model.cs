//------------------------------------------------------------------------------
// <auto-generated>
// Code auto-generated by CategoryGenerator version <version undefined>.
// Re-run the generator every time a new Message is added or removed.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using CodiceApp.EventTracking;
using MessageBroker;
using UnityEngine;
using UnityEditor;

namespace DeeDeeR.MessageBroker
{
    public class Character_Test
    {
        public event EventHandler<CharacterMessageBrokerEventArgs> OnCharacterCreated;
        
        public void Send_OnCharacterCreated(object sender, object target, DnD.Code.Scripts.Characters.CharacterStats characterStats)
        {
            if (sender == null)
            {
                var errorEventArgs = Common.CreateArgumentNullExceptionEventArgs("Character_Test", target, "sender");
                
                // DeeDeeR.MessageBroker.MessageBroker.Instance.Logger_Test.Send_OnLogException(sender, target, errorEventArgs);
                return;
            }

            if (characterStats == null)
            {
                var errorEventArgs = Common.CreateArgumentNullExceptionEventArgs(nameof(Character_Test), target, "characterStats");
                
                //DeeDeeR.MessageBroker.MessageBroker.Instance.Logger_Test.Send_OnLogException(sender, target, errorEventArgs);
                return;
            }

            var eventArgs = MessageBrokerEventArgs.Pool<CharacterMessageBrokerEventArgs>.Rent();
            eventArgs.Sender = sender;
            eventArgs.Target = target;
            eventArgs.CharacterStats = characterStats;
            
            OnCharacterCreated?.Invoke(sender, eventArgs);
        }

        public void Send_OnOtherEvent(object sender, object target,
            DnD.Code.Scripts.Characters.CharacterStats characterStats)
        {
        }
    }
    
    // Example derived class
    public class CharacterMessageBrokerEventArgs : MessageBrokerEventArgs, IResettable
    {
        public DnD.Code.Scripts.Characters.CharacterStats CharacterStats { get; set; }

        /// <inheritdoc cref="IResettable.ResetState"/>
        public void ResetState()
        {
            CharacterStats = null;
        }
    }
}